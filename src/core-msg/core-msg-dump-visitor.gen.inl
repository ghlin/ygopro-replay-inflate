/* !!! Generated code, DO NOT EDIT !!! */

struct CoreMsgDumpVisitor {
  std::string operator ()(const CoreMsg_RETRY &msg) const { return dump_CoreMsg_RETRY(msg); }
  std::string operator ()(const CoreMsg_HINT &msg) const { return dump_CoreMsg_HINT(msg); }
  std::string operator ()(const CoreMsg_WIN &msg) const { return dump_CoreMsg_WIN(msg); }
  std::string operator ()(const CoreMsg_WAITING &msg) const { return dump_CoreMsg_WAITING(msg); }
  std::string operator ()(const CoreMsg_START &msg) const { return dump_CoreMsg_START(msg); }
  std::string operator ()(const CoreMsg_SELECT_BATTLECMD &msg) const { return dump_CoreMsg_SELECT_BATTLECMD(msg); }
  std::string operator ()(const CoreMsg_SELECT_IDLECMD &msg) const { return dump_CoreMsg_SELECT_IDLECMD(msg); }
  std::string operator ()(const CoreMsg_SELECT_EFFECTYN &msg) const { return dump_CoreMsg_SELECT_EFFECTYN(msg); }
  std::string operator ()(const CoreMsg_SELECT_YESNO &msg) const { return dump_CoreMsg_SELECT_YESNO(msg); }
  std::string operator ()(const CoreMsg_SELECT_OPTION &msg) const { return dump_CoreMsg_SELECT_OPTION(msg); }
  std::string operator ()(const CoreMsg_SELECT_CARD &msg) const { return dump_CoreMsg_SELECT_CARD(msg); }
  std::string operator ()(const CoreMsg_SELECT_UNSELECT_CARD &msg) const { return dump_CoreMsg_SELECT_UNSELECT_CARD(msg); }
  std::string operator ()(const CoreMsg_SELECT_CHAIN &msg) const { return dump_CoreMsg_SELECT_CHAIN(msg); }
  std::string operator ()(const CoreMsg_SELECT_PLACE &msg) const { return dump_CoreMsg_SELECT_PLACE(msg); }
  std::string operator ()(const CoreMsg_SELECT_DISFIELD &msg) const { return dump_CoreMsg_SELECT_DISFIELD(msg); }
  std::string operator ()(const CoreMsg_SELECT_POSITION &msg) const { return dump_CoreMsg_SELECT_POSITION(msg); }
  std::string operator ()(const CoreMsg_SELECT_TRIBUTE &msg) const { return dump_CoreMsg_SELECT_TRIBUTE(msg); }
  std::string operator ()(const CoreMsg_SELECT_COUNTER &msg) const { return dump_CoreMsg_SELECT_COUNTER(msg); }
  std::string operator ()(const CoreMsg_SELECT_SUM &msg) const { return dump_CoreMsg_SELECT_SUM(msg); }
  std::string operator ()(const CoreMsg_SORT_CARD &msg) const { return dump_CoreMsg_SORT_CARD(msg); }
  std::string operator ()(const CoreMsg_SORT_CHAIN &msg) const { return dump_CoreMsg_SORT_CHAIN(msg); }
  std::string operator ()(const CoreMsg_CONFIRM_DECKTOP &msg) const { return dump_CoreMsg_CONFIRM_DECKTOP(msg); }
  std::string operator ()(const CoreMsg_CONFIRM_EXTRATOP &msg) const { return dump_CoreMsg_CONFIRM_EXTRATOP(msg); }
  std::string operator ()(const CoreMsg_CONFIRM_CARDS &msg) const { return dump_CoreMsg_CONFIRM_CARDS(msg); }
  std::string operator ()(const CoreMsg_SHUFFLE_DECK &msg) const { return dump_CoreMsg_SHUFFLE_DECK(msg); }
  std::string operator ()(const CoreMsg_REFRESH_DECK &msg) const { return dump_CoreMsg_REFRESH_DECK(msg); }
  std::string operator ()(const CoreMsg_SWAP_GRAVE_DECK &msg) const { return dump_CoreMsg_SWAP_GRAVE_DECK(msg); }
  std::string operator ()(const CoreMsg_SHUFFLE_SET_CARD &msg) const { return dump_CoreMsg_SHUFFLE_SET_CARD(msg); }
  std::string operator ()(const CoreMsg_SHUFFLE_HAND &msg) const { return dump_CoreMsg_SHUFFLE_HAND(msg); }
  std::string operator ()(const CoreMsg_SHUFFLE_EXTRA &msg) const { return dump_CoreMsg_SHUFFLE_EXTRA(msg); }
  std::string operator ()(const CoreMsg_REVERSE_DECK &msg) const { return dump_CoreMsg_REVERSE_DECK(msg); }
  std::string operator ()(const CoreMsg_DECK_TOP &msg) const { return dump_CoreMsg_DECK_TOP(msg); }
  std::string operator ()(const CoreMsg_NEW_TURN &msg) const { return dump_CoreMsg_NEW_TURN(msg); }
  std::string operator ()(const CoreMsg_NEW_PHASE &msg) const { return dump_CoreMsg_NEW_PHASE(msg); }
  std::string operator ()(const CoreMsg_MOVE &msg) const { return dump_CoreMsg_MOVE(msg); }
  std::string operator ()(const CoreMsg_POS_CHANGE &msg) const { return dump_CoreMsg_POS_CHANGE(msg); }
  std::string operator ()(const CoreMsg_SET &msg) const { return dump_CoreMsg_SET(msg); }
  std::string operator ()(const CoreMsg_SWAP &msg) const { return dump_CoreMsg_SWAP(msg); }
  std::string operator ()(const CoreMsg_FIELD_DISABLED &msg) const { return dump_CoreMsg_FIELD_DISABLED(msg); }
  std::string operator ()(const CoreMsg_SUMMONING &msg) const { return dump_CoreMsg_SUMMONING(msg); }
  std::string operator ()(const CoreMsg_SUMMONED &msg) const { return dump_CoreMsg_SUMMONED(msg); }
  std::string operator ()(const CoreMsg_SPSUMMONING &msg) const { return dump_CoreMsg_SPSUMMONING(msg); }
  std::string operator ()(const CoreMsg_SPSUMMONED &msg) const { return dump_CoreMsg_SPSUMMONED(msg); }
  std::string operator ()(const CoreMsg_FLIPSUMMONING &msg) const { return dump_CoreMsg_FLIPSUMMONING(msg); }
  std::string operator ()(const CoreMsg_FLIPSUMMONED &msg) const { return dump_CoreMsg_FLIPSUMMONED(msg); }
  std::string operator ()(const CoreMsg_CHAINING &msg) const { return dump_CoreMsg_CHAINING(msg); }
  std::string operator ()(const CoreMsg_CHAINED &msg) const { return dump_CoreMsg_CHAINED(msg); }
  std::string operator ()(const CoreMsg_CHAIN_SOLVING &msg) const { return dump_CoreMsg_CHAIN_SOLVING(msg); }
  std::string operator ()(const CoreMsg_CHAIN_SOLVED &msg) const { return dump_CoreMsg_CHAIN_SOLVED(msg); }
  std::string operator ()(const CoreMsg_CHAIN_END &msg) const { return dump_CoreMsg_CHAIN_END(msg); }
  std::string operator ()(const CoreMsg_CHAIN_NEGATED &msg) const { return dump_CoreMsg_CHAIN_NEGATED(msg); }
  std::string operator ()(const CoreMsg_CHAIN_DISABLED &msg) const { return dump_CoreMsg_CHAIN_DISABLED(msg); }
  std::string operator ()(const CoreMsg_CARD_SELECTED &msg) const { return dump_CoreMsg_CARD_SELECTED(msg); }
  std::string operator ()(const CoreMsg_RANDOM_SELECTED &msg) const { return dump_CoreMsg_RANDOM_SELECTED(msg); }
  std::string operator ()(const CoreMsg_BECOME_TARGET &msg) const { return dump_CoreMsg_BECOME_TARGET(msg); }
  std::string operator ()(const CoreMsg_DRAW &msg) const { return dump_CoreMsg_DRAW(msg); }
  std::string operator ()(const CoreMsg_DAMAGE &msg) const { return dump_CoreMsg_DAMAGE(msg); }
  std::string operator ()(const CoreMsg_RECOVER &msg) const { return dump_CoreMsg_RECOVER(msg); }
  std::string operator ()(const CoreMsg_LPUPDATE &msg) const { return dump_CoreMsg_LPUPDATE(msg); }
  std::string operator ()(const CoreMsg_PAY_LPCOST &msg) const { return dump_CoreMsg_PAY_LPCOST(msg); }
  std::string operator ()(const CoreMsg_EQUIP &msg) const { return dump_CoreMsg_EQUIP(msg); }
  std::string operator ()(const CoreMsg_UNEQUIP &msg) const { return dump_CoreMsg_UNEQUIP(msg); }
  std::string operator ()(const CoreMsg_CARD_TARGET &msg) const { return dump_CoreMsg_CARD_TARGET(msg); }
  std::string operator ()(const CoreMsg_CANCEL_TARGET &msg) const { return dump_CoreMsg_CANCEL_TARGET(msg); }
  std::string operator ()(const CoreMsg_ADD_COUNTER &msg) const { return dump_CoreMsg_ADD_COUNTER(msg); }
  std::string operator ()(const CoreMsg_REMOVE_COUNTER &msg) const { return dump_CoreMsg_REMOVE_COUNTER(msg); }
  std::string operator ()(const CoreMsg_ATTACK &msg) const { return dump_CoreMsg_ATTACK(msg); }
  std::string operator ()(const CoreMsg_BATTLE &msg) const { return dump_CoreMsg_BATTLE(msg); }
  std::string operator ()(const CoreMsg_ATTACK_DISABLED &msg) const { return dump_CoreMsg_ATTACK_DISABLED(msg); }
  std::string operator ()(const CoreMsg_DAMAGE_STEP_START &msg) const { return dump_CoreMsg_DAMAGE_STEP_START(msg); }
  std::string operator ()(const CoreMsg_DAMAGE_STEP_END &msg) const { return dump_CoreMsg_DAMAGE_STEP_END(msg); }
  std::string operator ()(const CoreMsg_MISSED_EFFECT &msg) const { return dump_CoreMsg_MISSED_EFFECT(msg); }
  std::string operator ()(const CoreMsg_TOSS_COIN &msg) const { return dump_CoreMsg_TOSS_COIN(msg); }
  std::string operator ()(const CoreMsg_TOSS_DICE &msg) const { return dump_CoreMsg_TOSS_DICE(msg); }
  std::string operator ()(const CoreMsg_ROCK_PAPER_SCISSORS &msg) const { return dump_CoreMsg_ROCK_PAPER_SCISSORS(msg); }
  std::string operator ()(const CoreMsg_HAND_RES &msg) const { return dump_CoreMsg_HAND_RES(msg); }
  std::string operator ()(const CoreMsg_ANNOUNCE_RACE &msg) const { return dump_CoreMsg_ANNOUNCE_RACE(msg); }
  std::string operator ()(const CoreMsg_ANNOUNCE_ATTRIB &msg) const { return dump_CoreMsg_ANNOUNCE_ATTRIB(msg); }
  std::string operator ()(const CoreMsg_ANNOUNCE_CARD &msg) const { return dump_CoreMsg_ANNOUNCE_CARD(msg); }
  std::string operator ()(const CoreMsg_ANNOUNCE_NUMBER &msg) const { return dump_CoreMsg_ANNOUNCE_NUMBER(msg); }
  std::string operator ()(const CoreMsg_ANNOUNCE_CARD_FILTER &msg) const { return dump_CoreMsg_ANNOUNCE_CARD_FILTER(msg); }
  std::string operator ()(const CoreMsg_CARD_HINT &msg) const { return dump_CoreMsg_CARD_HINT(msg); }
  std::string operator ()(const CoreMsg_PLAYER_HINT &msg) const { return dump_CoreMsg_PLAYER_HINT(msg); }
  std::string operator ()(const CoreMsg_MATCH_KILL &msg) const { return dump_CoreMsg_MATCH_KILL(msg); }
  std::string operator ()(const CoreMsg_RELOAD_FIELD &msg) const { return dump_CoreMsg_RELOAD_FIELD(msg); }
};
